name: $(Build.BuildId)

# Triggers Pipeline only on Master
trigger:
  branches:
    include:
    - master

# Disables triggering Pipeline run at creation of every Pull Request
pr: none

# Variables and Variable Groups used in rest of pipeline
variables:
  #k8s-service-connection: 'Kubernetes-Hellman-Saml2aws'
  k8s-service-connection: 'Kubernetes-Hellman-selfservice-deploy'
  KUBENAMESPACE: 'selfservice-herald-vbqkr'
  vmImage: 'ubuntu-20.04'

resources:
   containers:
     - container: ci_runner
       image: dfdsdk/prime-pipeline:0.6.7
       env:
        AWS_SECRET_ACCESS_KEY: $(AWS_SECRET_ACCESS_KEY)
        AWS_PROFILE: "default"
     - container: cd_runner
       image: dfdsdk/prime-pipeline:0.6.2
       env:
        AWS_SECRET_ACCESS_KEY: $(AWS_SECRET_ACCESS_KEY)
        PGPASSWORD: $(PGPASSWORD)
        AWS_PROFILE: "saml"

stages:
# Continuous Integration steps
- stage: CI
  pool:
    vmImage: $(vmImage)
  # Validation jobs
  jobs:
  # Build jobs
  - job: "Create_ECR"
    container: ci_runner
    steps:
    - bash:
        terragrunt apply-all --terragrunt-working-dir ./build --terragrunt-source-update --terragrunt-non-interactive -input=false -auto-approve

  - job: Build
    dependsOn: Create_ECR
    condition: succeeded('Create_ECR')
    steps:
    # - task: DotNetCoreInstaller@0
    #   inputs:
    #     version: '2.2.104' # replace this value with the version that you need for your project
    - bash: |
        sudo pip install setuptools
        sudo pip install awscli
        chmod +x ./pipeline.sh
        ./pipeline.sh $(Build.BuildId) $(System.DefaultWorkingDirectory)
      env:
        AWS_SECRET_ACCESS_KEY: $(AWS_SECRET_ACCESS_KEY)
        SLACK_API_AUTH_TOKEN: $(SLACK_API_AUTH_TOKEN)
        SLACK_TESTING_USER_EMAIL: $(SLACK_TESTING_USER_EMAIL)
        SLACK_API_BOT_USER_ID: $(SLACK_API_BOT_USER_ID)
        SLACK_DEFAULT_NOTIFICATION_CHANNEL_ID: $(SLACK_DEFAULT_NOTIFICATION_CHANNEL)
      displayName: Pipeline Bash Script

    